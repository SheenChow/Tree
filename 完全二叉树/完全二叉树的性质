完全二叉树的性质

	1. 在二叉树的第i层上，最多有2^（i-1）个结点。
	2. 深度为k的二叉树最多有2^k - 1个结点，注意与性质1的区别。
	3. 对于任意一棵二叉树T,如果其终端结点数为n0,度数为2的结点数为n2，则 n0 = n2 + 1；
		* 证明：设结点总数  n = n0 + n1 + n2; 除了根结点之外的所有结点都有一根分支线进入，所以分支线总数为 b = n - 1;而这些分支线又是由度为1和2的结点发出的，b = n1 + 2n2; 所以 b = n1  + 2n2 = n-1 = n0 + n1 + n2 -1 所以解之可得，n0 = n2 + 1

	4. 具有n个结点的完全二叉树的深度为 「log2n」+1
		* 证明：由性质2可知，一个深度为k的完全二叉树的结点数最多是2^k - 1，所以，k = log2(n + 1);而结点数一定是 2^(k-1) - 1 < n <= 2^(k) - 1。n <= 2^(k) - 1意味着，n < 2^k;2^(k-1) - 1 < n 意味着，n >= 2^(k) - 1。所以，k - 1 <= log2n < k。而k是整数，所以则有 k = 「log2n」+1 (「log2n」 表示向下取整)

	5. 如果对一棵有n个结点的完全二叉树（其深度为「log2n」+1 ）的结点按照层序编号（从第1层到第「log2n」+1 层，每层从左到右），对任一结点i(i <= n)有：
		1. 如果i = 1,则i是树的根，无双亲；如果i>1，则其双亲是 「i/2」
		2. 如果2i > n，则结点i无左孩子（结点i为叶子结点）；否则，其左孩子是结点2i.
		3. 如果2i + 1 > n，则结点i无右孩子；否则其右孩子是2i + 1；
		4. 证明：先证明2和3，然后可以用2和3推导得出1.证明2：假设第j层的第一个结点i的编号是2^(j-1),(前面两层有2^(j-1)-1个结点)如果有左孩子，则其左孩子必在第j+1层的第一个结点，所以，左孩子编号为2^(j) = 2(2^(j-1)) = 2i，所以如果2i > n 则无左孩子；其右孩子的必为j+1层的第二个结点，其编号为2i + 1，若2i + 1，则无右孩子。同时，假设第j层上某个结点的编号为i（2^(j-1) <= i <= 2^(j) - 1 ）,且2i+1<n,则其左孩子为2i,右孩子为2i+1,又编号为i+1的结点是编号为i的结点的1右兄弟或者堂兄弟，若它有左孩子，则编号必为2i + 2 = 2（i + 1）,若它有右孩子，则其编号必为2i + 3 = 2（i + 1）+ 1。（证明方法从‘充分’和‘必要’两个方面来证明了结论2和3）


